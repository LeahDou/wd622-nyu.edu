// The Nature of Code
// Daniel Shiffman
// http://natureofcode.com

class Particle {
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;
  float r,g,b;
  float mass = 1; // Let's do something better here!

  Particle(PVector l) {
    acceleration = new PVector(0, 0);
    velocity = new PVector(random(-1, 1), random(-1, 1));
    position = l.get();
    lifespan = 255.0;
    r = 0;
    g = 92;
    b = 175;
  }

  void run() {
    update();
    display();
  }

  void applyForce(PVector force) {
    PVector f = force.get();
    f.div(mass);   
    acceleration.add(f);
  }

  // Method to update position
  void update() {
    velocity.add(acceleration);
    position.add(velocity);
    acceleration.mult(0);
    lifespan -= 2.0;
  }

  void display() {
    //noStroke();
    //stroke(178, 143, 206);
    //if(position.x <width/2+50 && position.x >width/2-50 && position.y <height/2+50 &&position.y >height/2-50){
    //fill(255,0,255,1);}
    //else{
    //fill(0,0,255,1);
    //}
    //else if(position.x >width/2-100 && position.x <width/2-50|| position.x >width/2+50 || position.x <width/2+100|| position.y<height/2-50 || position.y>height/2-100||position.y>height/2+50||position.y<height/2+100){
    //fill(255,0,0);
    //}
    r++;
    g++;
    b--;
    fill(r,g,b,5);
    ellipse(position.x, position.y, 1, 1);
    
  }

  boolean isDead() {
    if (lifespan < 0.0) {
      return true;
    } else {
      return false;
    }
  }
}
